
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.service_name }}
spec:
  replicas: {{ .Values.replicas }}
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: {{ .Values.service_name }}
  minReadySeconds: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: {{ .Values.service_name }}
    spec:
      containers:
        - name: {{ .Values.service_name }}
          image:  "{{ .Values.docker_registry }}:{{ .Values.service_name }}-{{ .Values.image_tag }}"
          ports:
            - containerPort: 80
          livenessProbe:
            httpGet:
              path: /healthcheck
              port: 80
            initialDelaySeconds: 300
            periodSeconds: 10
        #   readinessProbe:
        #     httpGet:
        #       path: /healthcheck
        #       port: 80
        #     initialDelaySeconds: 300
        #     periodSeconds: 10
          resources:
            requests:
              memory: 128M
              cpu: 0.5
            limits:
              memory: 128M
              cpu: 0.75